<?xml version="1.0"?>

<pipeline ssi-v="1">

	<register>
		<load name="signal" />
		<load name="python310" />
	</register>

	<include path=".\audio_input.pipeline"/>

	<!-- # Downsample and VAD
	The audio input is downsampled to `16000 Hz` and the VAD is applied to the downsampled signal.
	The VAD is implemented in Python and is based on the `silero_vad` library. The VAD is used to detect speech segments in the audio signal.
	The VAD output is used to filter the audio signal and to extract features only from the speech segments (0 values otherwise).
	-->
	<transformer create="DownSample:audio-down" keep="3">
		<input pin="audio" frame="9"/>
		<output channel="audio-down" pin="audio-down"/>
	</transformer>

	<gate close="$(calibration:vad:tresh)">
		<transformer create="PythonFeature:python-vad" script="vad" syspath="..\scripts" optsstr="vad_tresh=$(vad:tresh);vad_calibration=$(calibration:vad:tresh)">
			<input pin="audio-down" frame="0.1s"/>
			<output pin="python-vad"/>
		</transformer>
	</gate>
	<gate open="$(calibration:vad:tresh)">
		<transformer create="PythonFeature:python-vad" script="vad" syspath="..\scripts" optsstr="vad_tresh=$(vad:tresh);vad_calibration=$(calibration:vad:tresh)">
			<input pin="audio-down" frame="0.1s"/>
			<listen address="calibration@vad"/>
			<output pin="python-vad"/>
		</transformer>
	</gate>
	
	<transformer create="PythonFilter:vad-audio" script="vad_filter" syspath="..\scripts">
		<input pin="audio-down" frame="0.1s"/>
		<listen address="vad@audio"/>
		<output pin="vad-audio"/>
	</transformer>
	<!---->

</pipeline>